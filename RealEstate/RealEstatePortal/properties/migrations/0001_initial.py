# Generated by Django 4.2.3 on 2023-07-16 21:45

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_1', models.CharField(max_length=15)),
                ('phone_2', models.CharField(max_length=15, null=True)),
                ('phone_3', models.CharField(max_length=15, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Agents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contracts_closed', models.IntegerField(default=0, null=True)),
                ('revenue_generated', models.FloatField(default=0.0, null=True)),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('phone_1', models.CharField(max_length=15)),
                ('phone_2', models.CharField(max_length=15, null=True)),
                ('phone_3', models.CharField(max_length=15, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='properties.agents')),
            ],
        ),
        migrations.CreateModel(
            name='Features',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prop_feature', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Owners',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_ql_id', models.CharField(max_length=10, unique=True)),
                ('activated', models.BooleanField(default=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('phone_1', models.CharField(max_length=15)),
                ('phone_2', models.CharField(max_length=15, null=True)),
                ('phone_3', models.CharField(max_length=15, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='properties.agents')),
            ],
        ),
        migrations.CreateModel(
            name='PropertiesFeatures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('re_feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='properties.features')),
            ],
        ),
        migrations.CreateModel(
            name='ResProperties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref', models.IntegerField(unique=True)),
                ('prop_division', models.CharField(choices=[('QL', 'Residential'), ('QC', 'Commercial'), ('ZH', 'Sales')], default='QL', max_length=2)),
                ('prop_type', models.CharField(max_length=25)),
                ('location', models.CharField(max_length=25)),
                ('area', models.CharField(max_length=15)),
                ('address', models.TextField(null=True)),
                ('link', models.URLField()),
                ('_price', models.FloatField(db_column='Price', default=0.0)),
                ('status', models.CharField(choices=[('RE', 'Rented'), ('AV', 'Available'), ('SO', 'Coming soon'), ('TC', 'To call')], default='RE', max_length=2)),
                ('status_valid', models.CharField(max_length=25)),
                ('off_the_market', models.BooleanField(default=False)),
                ('bedrooms', models.IntegerField()),
                ('bathrooms', models.IntegerField(default=0)),
                ('prop_description', models.TextField()),
                ('date_added', models.DateField(auto_now_add=True)),
                ('date_rented', models.DateField(null=True)),
                ('date_expected', models.DateField(null=True)),
                ('time_updated', models.TimeField(auto_now=True)),
                ('lf', models.CharField(max_length=50, null=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='properties.agents')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='properties.owners')),
                ('prop_features', models.ManyToManyField(through='properties.PropertiesFeatures', to='properties.features')),
            ],
        ),
        migrations.CreateModel(
            name='Viewings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('agent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='properties.agents')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='properties.clients')),
                ('re_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='properties.resproperties')),
            ],
        ),
        migrations.AddField(
            model_name='propertiesfeatures',
            name='re_property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='properties.resproperties'),
        ),
        migrations.CreateModel(
            name='Contracts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('move_in_date', models.DateField()),
                ('sign_date', models.DateField()),
                ('period', models.IntegerField(default=12)),
                ('final_price', models.FloatField(default=0.0)),
                ('af_paid', models.BooleanField(default=False)),
                ('deposit_paid', models.BooleanField(default=False)),
                ('contract_signed', models.BooleanField(default=False)),
                ('agent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='properties.agents')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='properties.clients')),
                ('re_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='properties.resproperties')),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='properties.agents')),
                ('re_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='properties.resproperties')),
            ],
        ),
    ]
